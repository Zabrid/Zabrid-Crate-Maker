# ###################################################################

# Zabrid's Crate Maker
# Source Code

# Feel free to change anything below this point.
# Although, beware you might break something!

# If you make a change and think that it should be pushed to the official script
# make a pull request on the GitHub https://github.com/Zabrid/Zabrid-Crate-Maker

# ###################################################################

command /crates [<text>] [<text>] [<text>] [<text>] [<text>]:
    aliases: /crate, /zcrates
    trigger:
        if arg 1 is not set:
            if player does not have permission "zcratemaker.gui":
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            zcratemaker_gui_main(player)
        
        else if arg 1 is "help":
            if player does not have permission "zcratemaker.help":
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            send ""
            send "&e&lCrate Maker"
            send "&7 Author(s): &e{zabrid}##3433"
            send ""
            send "&7&o (( Hover for more information about commands ))"
            send ""
            send "&6 -> &e/crate &7&o(zcratemaker.gui)"
            send "&6 -> &e/crate list &7&o(zcratemaker.list)"
            send "&6 -> &e/crate create <name> &7&o(zcratemaker.create)"
            send "&6 -> &e/crate delete <name> &7&o(zcratemaker.delete)"
            send "&6 -> &e/crate edit <name> &7&o(zcratemaker.edit)"
            send "&6 -> &e/crate setcrate <name> &7&o(zcratemaker.setcrate)"
            send "&6 -> &e/crate give <player> <crate> <type> <amt?1> &7&o(zcratemaker.give)"
            send "&6 -> &e/crate giveall <crate> <type> <amt?1> &7&o(zcratemaker.giveall)"
            send "&6 -> &e/crate take <player> <crate> <amt?1> &7&o(zcratemaker.take)"
            send ""

        else if arg 1 is "create":
            if player has permission "zcratemaker.create":   
                set {_allow} to true
            if sender is console:
                set {_allow} to true
            if {_allow} is not true:
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if arg 1 is not set:
                send "&cYou have not specified a name for the crate."
                send "&6 -> &e/crate create <name>"
                stop
            if zcratemaker_createcrate(arg 2) is false:
                send "&cThere is already a crate with that name."
                stop
            send ""
            send "&a&lYOU HAVE CREATED A NEW CRATE"
            send ""
            send "&6 -> &eCreate Name: %arg 2%"
            send ""
            send formatted "&6 -> &eYou can edit the crate with &6/crate edit %arg 2% &7<suggest command:/crate edit %arg 2%>(Click Here)"
            send formatted "&6 -> &eYou can also delete the crate with &6/cmd delete %arg 2% &7<suggest command:/crate delete %arg 2%>(Click Here)"
            send ""

        else if arg 1 is "delete":
            if player has permission "zcratemaker.delete":   
                set {_allow} to true
            if sender is console:
                set {_allow} to true
            if {_allow} is not true:
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if arg 2 is not set:
                send "&cYou have not specified the name of the crate"
                send "&6 -> &e/crate delete <name>"
                stop
            if {zcratemaker::crates::%arg 2%} is not set:
                send "&cThere is no crate with that name."
                stop
            send "&cAre you sure you wish to delete this crate?"
            send formatted "&cto confirm click <cmd:/crate d!elete-confirm$ %arg 2%>&fHere."
        else if arg 1 is "d!elete-confirm$":
            if player has permission "zcratemaker.delete":   
                set {_allow} to true
            if sender is console:
                set {_allow} to true
            if {_allow} is not true:
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if arg 2 is not set:
                send "&cYou have not specified the name of the crate"
                send "&6 -> &e/crate delete <name>"
                stop
            if zcratemaker_deletecrate(arg 2) is false:
                send "&cThere is no crate with that name."
                stop
            send "&6You have successfully delete the %arg 2% crate."

        else if arg 1 is "edit":
            if player does not have permission "zcratemaker.edit":   
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if arg 2 is not set:
                send "&cYou have not specified the name of the crate"
                send "&6 -> &e/crate edit <name>"
                stop
            if {zcratemaker::crates::%arg 2%} is not set:
                send "&cThere is no crate with that name."
                stop
            zcratemaker_gui_edit(player, arg 2)

        else if arg 1 is "list":
            if player does not have permission "zcratemaker.edit":   
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if size of {zcratemaker::crates::*} is less than 1:
                send "&cThere have been no crates created."
                send formatted "&8 -> &eCreate a command with &6/crates create <suggest command:/crates create>&7(Click Here)"
                stop
            send ""
            send "&6Full list of all created crates:"
            loop {zcratemaker::crates::*}:
                send formatted "&6 -> &e%loop-index% crate &8- <suggest command:/crates edit %loop-index%>&e(Edit)<suggest command:/crates delete %loop-index%> &4(Delete)"
            send ""
        
        else if arg 1 is "give":
            if player has permission "zcratemaker.give":
                set {_allow} to true
            if sender is console:
                set {_allow} to true
            if {_allow} is not set:
                send zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("no-perms")) 
                stop
            if arg 2 is not set:
                send "&cYou must specify a player to give the crate to."
                send "&8 -> &e/crate give <player> <crate> <type> <amt?1>"
                stop
            set {_p} to arg 2 parsed as offline player
            if {_p} is not online:
                send "&cThe player you specified is not online."
                stop
            if arg 3 is not set:
                send "&cYou must specify the crate to give to %{_p}%"
                send "&8 -> &e/crate give <player> <crate> <type> <amt?1>"
                stop
            set {_list::*} to {zcratemaker::crates::*}
            if {_list::*} does not contain arg 3:
                send "&cThe crate you specified does not seem to exist."
                stop
            if arg 4 is not set:
                send "&cYou must specify whether or not you're giving a virtual or a physical crate."
                send "&8 -> &e/crate give <player> <crate> <type=v,p,virtual,physical> <amt?1>"
                stop
            if arg 4 is not "v" or "p" or "physical" or "virtual":
                send "&cThe crate type you specified is invalid"
                send "&8 -> &eValid Types: V, P, Virtual, Physical"
                stop
            set {_amt} to ( arg 5 ? 1 ) parsed as integer
            if arg 4 is "p" or "physical":
                set {_item} to zcratemaker_generatekey(arg 3)
                add {_amt} of {_item} to {_p}'s inventory
                send "&aYou have given %{_p}% a physical %arg 3% crate key."
            if arg 4 is "v" or "virtual":
                zcratemaker_givekey(player, arg 3, {_amt})
                send "&aYou have given %{_p}% a virtual %arg 3% crate key."

        else:
            set {_message::*} to zcratemaker_formatbasicmessage("%sender%", zcratemaker_getlang("argument-not-recognized")) 
            replace all "{argument}" in {_message::*} with arg 1
            send {_message::*}