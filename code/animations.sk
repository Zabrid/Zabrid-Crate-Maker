# ###################################################################

# Zabrid's Crate Maker
# Source Code

# Feel free to change anything below this point.
# Although, beware you might break something!

# If you make a change and think that it should be pushed to the official script
# make a pull request on the GitHub https://github.com/Zabrid/Zabrid-Crate-Maker

# ###################################################################

function zcratemaker_animations_csgo(p: player, name: text, dir: text):

    # Simply checking to see if the crate exists. This is for redundency
    {zcratemaker::crates::%{_name}%} is set

    # Getting all config information
    set {_gui-name::*} to zcratemaker_getconfig("animations [gui-name]")
    set {_gui-fill::*} to zcratemaker_getconfig("animations [csgo] [fill-item]")
    set {_gui-win::*} to zcratemaker_getconfig("animations [csgo] [win-item]")

    # Creating the inventory
    set {_gui} to chest inventory named {_gui-name::1} with 3 rows
    open {_gui} to {_p}

    set {_maxchance} to 0
    loop {zcratemaker::crates::%{_name}%::items::*}:
        set {_minchance::%loop-index%} to {_maxchance}
        set {_nbt} to full nbt compound of loop-value
        set {_chance} to "tag;zcratemaker-chance" tag of {_nbt}
        add {_chance} to {_maxchance}
        set {_maxchance::%loop-index%} to {_maxchance}
    loop 50 times:
        set {_num} to a random number between 0 and {_maxchance}
        loop {zcratemaker::crates::%{_name}%::items::*}:
            {_num} is between {_minchance::%loop-index%} and {_maxchance::%loop-index%}
            add {zcratemaker::crates::%{_name}%::items::%loop-index%} to {_roll::*}
    
    # This is based off LimeGlass's snippet
    # https://forums.skunity.com/threads/custom-crate-templates-creating-crate-designs-for-free.1922/#post-4110

    set {_speedFinal} to "%zcratemaker_getconfig("animations [csgo] [speed]")%" parsed as integer
    #Selector settings (Where the selectors should be)
    set {_Selector1} to 4
    set {_Selector2} to 22

    set {_roll} to 33
    set {_roll2} to 0
    loop {_roll} times:
        add 1 to {_roll2}

        set {_sel} to 21
        loop {_sel} times:
            set {_sel2} to {_sel} - 1
            set {_item::%{_sel}%} to {_item::%{_sel2}%}
            subtract 1 from {_sel}
        
        set {_item::1} to a random element out of {_roll::*}

        loop integers between 0 and ( 3 * 9 ) - 1:
            if loop-number-2 is {_Selector1} or {_Selector2}:
                set slot loop-number-2 of {_gui} to {_gui-win::1}
            else:
                set slot loop-number-2 of {_gui} to {_gui-fill::1}
            loop 9 times:
                if {_dir} is "right":
                    set slot 18 - loop-number-3 of {_gui} to {_item::%loop-number-3%}
                else if {_dir} is "left":
                    set slot 8 + loop-number-3 of {_gui} to {_item::%loop-number-3%}
        
        add 1 to {_speed}
        if {_speed} is 5:
            set {_speed} to 0
            add 1 to {_speedFinal}
        loop {_speedFinal} times:
            wait a tick
        
        set {_winning-sound} to "%zcratemaker_getconfig("animations [csgo] [winning-sound]")%"
        set {_rolling-sound} to "%zcratemaker_getconfig("animations [csgo] [rolling-sound]")%"
        if {_roll2} is {_roll}:
            play sound {_winning-sound} with volume 0.3 to {_p}
        else:
            play sound {_rolling-sound} with volume 0.3 to {_p}

        open {_gui} to {_p}
    
    set {_wonItem} to slot 13 of {_gui}
    if "%zcratemaker_getconfig("reroll [enabled]")%" is "true":
        if {_p} has permission "zcratemaker.reroll":
            if metadata value "zcratemaker.rerolling" of {_p} is set:
                delete metadata value "zcratemaker.rerolling" of {_p}
                zcratemaker_givereward({_p}, {_wonItem}, {_name})
            else:
                zcratemaker_openrerollgui({_p}, {_name}, {_wonItem})
        else:
            zcratemaker_givereward({_p}, {_wonItem}, {_name})
    else:
        zcratemaker_givereward({_p}, {_wonItem}, {_name})

function zcratemaker_animations_lightning(p: player, name: text):

    # Simply checking to see if the crate exists. This is for redundency
    {zcratemaker::crates::%{_name}%} is set

    # Getting all config information
    set {_gui-name::*} to zcratemaker_getconfig("animations [gui-name]")
    set {_gui-fill::*} to zcratemaker_getconfig("animations [lightning] [fill-item]")
    set {_gui-win::*} to zcratemaker_getconfig("animations [lightning] [win-item]")

    # Creating the inventory
    set {_gui} to chest inventory named {_gui-name::1} with 5 rows
    open {_gui} to {_p}

    set {_maxchance} to 0
    loop {zcratemaker::crates::%{_name}%::items::*}:
        set {_minchance::%loop-index%} to {_maxchance}

        set {_nbt} to full nbt compound of loop-value
        set {_chance} to "tag;zcratemaker-chance" tag of {_nbt}
        add {_chance} to {_maxchance}
        set {_maxchance::%loop-index%} to {_maxchance}
    loop 50 times:
        set {_num} to a random number between 0 and {_maxchance}
        loop {zcratemaker::crates::%{_name}%::items::*}:
            {_num} is between {_minchance::%loop-index%} and {_maxchance::%loop-index%}
            add {zcratemaker::crates::%{_name}%::items::%loop-index%} to {_roll::*}
    
    # This is based off LimeGlass's snippet
    # https://forums.skunity.com/threads/custom-crate-templates-creating-crate-designs-for-free.1922/#post-4110

    set {_speedFinal} to "%zcratemaker_getconfig("animations [lightning] [speed]")%" parsed as integer
    #Selector settings (Where the selectors should be)
    set {_Selector1} to 13
    set {_Selector2} to 31
    set {_Selector3} to 21
    set {_Selector4} to 23

    set {_roll} to 33
    set {_roll2} to 0
    loop {_roll} times:
        add 1 to {_roll2}

        set {_sel} to 7
        loop {_sel} times:
            set {_sel2} to {_sel} - 1
            set {_item::%{_sel}%} to {_item::%{_sel2}%}
            subtract 1 from {_sel}
        
        set {_item::1} to a random element out of {_roll::*}

        loop integers between 0 and ( 5 * 9 ) - 1:
            if loop-number-2 is {_Selector1}, {_Selector2}, {_Selector3} or {_Selector4}:
                set slot loop-number-2 of {_gui} to {_gui-win::1}
            else:
                set slot loop-number-2 of {_gui} to {_gui-fill::1}
            loop 9 times:
                if loop-number-3 = 1:
                    set slot 7 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 2:
                    set slot 15 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 3:
                    set slot 14 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 4:
                    set slot 22 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 5:
                    set slot 30 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 6:
                    set slot 29 of {_gui} to {_item::%loop-number-3%}
                else if loop-number-3 = 7:
                    set slot 37 of {_gui} to {_item::%loop-number-3%}
        
        add 1 to {_speed}
        if {_speed} is 6:
            set {_speed} to 0
            add 1 to {_speedFinal}
        loop {_speedFinal} times:
            wait a tick
        
        set {_winning-sound} to "%zcratemaker_getconfig("animations [lightning] [winning-sound]")%"
        set {_rolling-sound} to "%zcratemaker_getconfig("animations [lightning] [rolling-sound]")%"
        if {_roll2} is {_roll}:
            play sound {_winning-sound} with volume 0.3 to {_p}
        else:
            play sound {_rolling-sound} with volume 0.3 to {_p}

        open {_gui} to {_p}
    
    set {_wonItem} to slot 22 of {_gui}
    if "%zcratemaker_getconfig("reroll [enabled]")%" is "true":
        if {_p} has permission "zcratemaker.reroll":
            if metadata value "zcratemaker.rerolling" of {_p} is set:
                delete metadata value "zcratemaker.rerolling" of {_p}
                zcratemaker_givereward({_p}, {_wonItem}, {_name})
            else:
                zcratemaker_openrerollgui({_p}, {_name}, {_wonItem})
        else:
            zcratemaker_givereward({_p}, {_wonItem}, {_name})
    else:
        zcratemaker_givereward({_p}, {_wonItem}, {_name})

function zcratemaker_animations_soul(p: player, name: text):
    # Simply checking to see if the crate exists. This is for redundency
    {zcratemaker::crates::%{_name}%} is set

    # Getting all config information
    set {_gui-name::*} to zcratemaker_getconfig("animations [gui-name]")
    set {_gui-fill::*} to zcratemaker_getconfig("animations [soul] [fill-item]")
    set {_gui-win::*} to zcratemaker_getconfig("animations [soul] [win-item]")

    # Creating the inventory
    set {_gui} to chest inventory named {_gui-name::1} with 5 rows
    open {_gui} to {_p}

    set {_maxchance} to 0
    loop {zcratemaker::crates::%{_name}%::items::*}:
        set {_minchance::%loop-index%} to {_maxchance}
        set {_nbt} to full nbt compound of loop-value
        set {_chance} to "tag;zcratemaker-chance" tag of {_nbt}
        add {_chance} to {_maxchance}
        set {_maxchance::%loop-index%} to {_maxchance}
    loop 50 times:
        set {_num} to a random number between 0 and {_maxchance}
        loop {zcratemaker::crates::%{_name}%::items::*}:
            {_num} is between {_minchance::%loop-index%} and {_maxchance::%loop-index%}
            add {zcratemaker::crates::%{_name}%::items::%loop-index%} to {_roll::*}

    # This is based off LimeGlass's snippet
    # https://forums.skunity.com/threads/custom-crate-templates-creating-crate-designs-for-free.1922/#post-4110

    set {_speedFinal} to "%zcratemaker_getconfig("animations [soul] [speed]")%" parsed as integer
    #Selector settings (Where the selectors should be)
    set {_Selector1} to 21
    set {_Selector2} to 23

    set {_roll} to 33
    set {_roll2} to 0
    loop {_roll} times:
        add 1 to {_roll2}

        set {_sel} to 5
        loop {_sel} times:
            set {_sel2} to {_sel} - 1
            set {_item::%{_sel}%} to {_item::%{_sel2}%}
            subtract 1 from {_sel}
        
        set {_item::1} to a random element out of {_roll::*}

        loop integers between 0 and ( 5 * 9 ) - 1:
            if loop-number-2 is {_Selector1} or {_Selector2}:
                set slot loop-number-2 of {_gui} to {_gui-win::1}
            else:
                set slot loop-number-2 of {_gui} to {_gui-fill::1}
            loop 5 times:
                set slot -5 + (9 * loop-number-3) of {_gui} to {_item::%loop-number-3%}
        
        add 1 to {_speed}
        if {_speed} is 6:
            set {_speed} to 0
            add 1 to {_speedFinal}
        loop {_speedFinal} times:
            wait a tick
        
        set {_winning-sound} to "%zcratemaker_getconfig("animations [soul] [winning-sound]")%"
        set {_rolling-sound} to "%zcratemaker_getconfig("animations [soul] [rolling-sound]")%"
        if {_roll2} is {_roll}:
            play sound {_winning-sound} with volume 0.3 to {_p}
        else:
            play sound {_rolling-sound} with volume 0.3 to {_p}

        open {_gui} to {_p}
    
    set {_wonItem} to slot 22 of {_gui}
    if "%zcratemaker_getconfig("reroll [enabled]")%" is "true":
        if {_p} has permission "zcratemaker.reroll":
            if metadata value "zcratemaker.rerolling" of {_p} is set:
                delete metadata value "zcratemaker.rerolling" of {_p}
                zcratemaker_givereward({_p}, {_wonItem}, {_name})
            else:
                zcratemaker_openrerollgui({_p}, {_name}, {_wonItem})
        else:
            zcratemaker_givereward({_p}, {_wonItem}, {_name})
    else:
        zcratemaker_givereward({_p}, {_wonItem}, {_name})

on inventory click:
    set {_gui-name::*} to zcratemaker_getconfig("animations [gui-name]")
    name of player's current inventory is {_gui-name::1}
    cancel event